// This script provides functionality for the bots to spawn minions

// These parameters are required
this.Name = "Minion";			// The name of the goal.
this.Parent = "HighLevel";		// The name of the parent. This setting determines where in the state tree the goal will reside in.
this.SkipGetPriorityWhenActive = true;
this.AutoAdd = true;
this.Debug = true;

// List of minion modules, in order of usefulness
this.MinionModules =
{
	MODULE.VORTIGAUNT,
	MODULE.ANTLION_WORKER,
	MODULE.ANTLION,
	MODULE.FASTZOMBIE,
	MODULE.ZOMBIE,
	MODULE.FASTHEADCRAB,
};

// number of slots each minion takes
this.MinionSlots = 
{
	2,
	1,
	1,
	1,
	1,
	1,
};

// the buttons that activate each minion
this.MinionButton = 
{
	BTN.MINION_VORTIGAUNT,
	BTN.MINION_ANTLION_WORKER,
	BTN.MINION_ANTLION,
	BTN.MINION_FASTZOMBIE,
	BTN.MINION_ZOMBIE,
	BTN.MINION_FASTHEADCRAB,
};

this.SpawnMinion = function()
{
	slotsFree = this.Bot.MinionsMax - this.Bot.Minions;
	if(slotsFree > 0)
	{
		foreach(x and id in this.MinionModules)
		{
			if (slotsFree >= this.MinionSlots[id])
			{
				this.Bot.GetModuleStats(id, this.ModuleStats);
				
				// if we have the skill, we can spawn the minions
				if (this.ModuleStats.Level > 0)
				{
					this.Bot.PressButton(this.MinionButton[x]);
					
					if(this.Debug)
					{
						print(this.Bot.Name, "Spawning Minion ", Util.GetTableKey(MODULE,id));
					}
					break;
				}
			}
		}
	}
};

this.SpawnManhack = function()
{
	slotsFree = this.Bot.ManhackMax - this.Bot.Manhack;
	if(slotsFree > 0)
	{
		this.Bot.PressButton( BTN.MANHACK );
		
		if(this.Debug)
		{
			print(this.Bot.Name, "Spawning Manhack");
		}
	}
};

this.SpawnCrow = function()
{
	slotsFree = this.Bot.CrowsMax - this.Bot.Crows;
	if(slotsFree > 0)
	{
		this.Bot.PressButton( BTN.CROW );
		
		if(this.Debug)
		{
			print(this.Bot.Name, "Spawning Crow");
		}
	}
};

this.SpawnMagmine = function()
{
	slotsFree = this.Bot.MagmineMax - this.Bot.Magmine;
	if(slotsFree > 0)
	{
		this.Bot.PressButton( BTN.MAGMINE );
		
		if(this.Debug)
		{
			print(this.Bot.Name, "Spawning Magmine");
		}
	}
};

this.SpawnLasers = function()
{
	slotsFree = this.Bot.LasersMax - this.Bot.Lasers;
	if(slotsFree > 0)
	{
		// todo: placement logic
		//this.Bot.PressButton( BTN.LASER );
		
		//if(this.Debug)
		//{
		//	print(this.Bot.Name, "Spawning Lasers");
		//}
	}
};

this.SpawnTurret = function()
{
	slotsFree = this.Bot.TurretsMax - this.Bot.Turrets;
	if(slotsFree > 0)
	{
		// todo: placement logic
		//this.Bot.PressButton( BTN.TURRET );
		
		//if(this.Debug)
		//{
		//	print(this.Bot.Name, "Spawning Turret");
		//}
	}
};

this.Initialize = function()
{
	this.ModuleStats = {};
	this.Debug = true;
};

this.GetPriority = function()
{
	while( true )
	{
		this.SpawnMinion();
		sleep(1);
		this.SpawnManhack();
		sleep(1);
		this.SpawnCrow();
		sleep(1);
		this.SpawnMagmine();
		sleep(1);
		this.SpawnLasers();
		sleep(1);
		this.SpawnTurret();
		sleep(5);
	}
};

this.Enter = function()
{
};

this.Exit = function()
{
	this.ReleaseAimRequest();
};

this.Update = function()
{
	
};
