name: build

env:
  BASEPATH: /home/runner/work/planet_quake/planet_quake
  STANDARDTOOLS: libcurl4-openssl-dev mesa-common-dev libxxf86dga-dev libxrandr-dev libxxf86vm-dev libasound-dev libsdl2-dev
  EXTRATOOLS: wget binaryen
  WASISDK: wget --no-check-certificate https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-14/wasi-sdk-14.0-linux.tar.gz
  WASIINSTALL: |
    mkdir libs/linux
    tar -zxvf wasi-sdk-14.0-linux.tar.gz -C libs/linux/
    npm install -g uglify-js
  SPARSECHECKOUT: |
    /code/
    /make/
    /games/multigame/
    /libs/musl-1.2.2/
    /libs/tools/quake3/
    /libs/SDL2-2.0.14/
    /libs/libvorbis-1.3.7/
    /libs/libogg-1.3.4/
    /.github/

on:
  workflow_call:
    inputs:
      makefile:
        required: true
        type: string
      targets:
        required: false
        type: string
        default: clean release index install
      sparse:
        required: false
        type: string
        default: ~

jobs:
  standard-build:
    name: ${{ matrix.name }} (${{ matrix.arch }}) ${{ matrix.proper }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        platform: [wasm]
        runtime: [client, client-mw, client-slim]
        arch: [js]
        include:
        - arch: js
        - platform: wasm
          name: WebAssembly
          cc: libs/linux/wasi-sdk-14.0/bin/clang
          flags: USE_ASYNCHRONOUS=1 USE_LAZY_LOAD=1
          os: ubuntu-latest
        - runtime: client
          proper: Client
          cflags: ~
        - runtime: client-mw
          proper: Client (Multiworld)
          cflags: USE_MULTIVM_CLIENT=1 USE_MULTIVM_SERVER=1
        - runtime: client-slim
          proper: Client (Slim)
          cflags: BUILD_SLIM_CLIENT=1
#        - runtime: client-experimental
#          proper: Client (Experimental)
#          cflags: BUILD_EXPERIMENTAL=1
    steps:
    - uses: snow-actions/sparse-checkout@v1.1.0
      with:
        patterns: |
          ${{ env.SPARSECHECKOUT }}
          ${{ inputs.sparse }}
    - name: Download Artifacts
      if: false
      uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.platform }}-js
        continueOnError: true
    - name: Install tools
      run: |
        sudo apt-get -qq update
        sudo apt-get -y install ${{ env.STANDARDTOOLS }} ${{ env.EXTRATOOLS }}
        ${{ env.WASISDK }}
        ${{ env.WASIINSTALL }}
    - name: Build
      run: |
        make -f ${{ inputs.makefile }} -j 16 NO_MAKE_LOCAL=1 \
        ARCH=${{ matrix.arch }} ${{ matrix.cflags }} \
        PLATFORM=${{ matrix.platform }} ${{ matrix.flags }} \
        CC=${{ matrix.cc }} V=1 ${{ inputs.targets }} 
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.platform }}-js
        path: bin/*
        if-no-files-found: error
        retention-days: 10
